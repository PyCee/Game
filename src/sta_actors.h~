
#ifndef _STATIC_ACTORS_
#define _STATIC_ACTORS_

#include "ActorComponents/identifierComponent.h"
#include "ActorComponents/audioComponent.h"
#include "ActorComponents/directionComponent.h"
#include "ActorComponents/physicsComponent.h"
#include "ActorComponents/collisionsComponent.h"
#include "ActorComponents/renderComponent.h"

#define MAX_STA_ACTOR_COUNT 10
typedef struct _Sta_Actors_t
{
	// Various Components used by every Static Actor
	IdentifierComponent_t		identifier		[MAX_STA_ACTOR_COUNT];
	AudioComponent_t				audio					[MAX_STA_ACTOR_COUNT];
	DirectionComponent_t		direction			[MAX_STA_ACTOR_COUNT];
	PhysicsComponent_t 			physics				[MAX_STA_ACTOR_COUNT];
	CollisionsComponent_t		collisions		[MAX_STA_ACTOR_COUNT];
	RenderComponent_t				render				[MAX_STA_ACTOR_COUNT];
	
	U8	 										ActiveActor		[MAX_STA_ACTOR_COUNT]; // Tells whether an Actor is active or not
} Sta_Actors_t;

Sta_Actors_t Sta_Actors;

void	genAllSta_Actors						(void);
void	freeAllSta_Actors						(void);
void	genSta_Actor								(U8);
void	freeSta_Actor								(U8);
void	updateSta_Actors						(void);
U8		getFirstInactiveSta_Actor		(void);
U8 		AddSta_Actor								(void);

/*
void Move(Dyn_Actors_t *, F64, F64);
void setPos(Dyn_Actors_t *, F64, F64);
*/

#endif /* _STATIC_ACTORS_ */
